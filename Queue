import java.util.NoSuchElementException;

public class Queue {
	
	private ListNode front;
	private ListNode rear;
	private int length;
	
	private class ListNode{
		
		private int data;
		private ListNode next;
		
		public ListNode(int data) {
			this.data = data;
			this.next = next;
		}
	}
	
	
	public int length() {
		this.length = length;
		return length;
	}
	
	
	public boolean isEmpty() {
		return length == 0;
	}
	
	
	public void enqueue(int data) { 
		
		ListNode temp = new ListNode(data);
		if(isEmpty()) {
			front = temp;
		}
		else {
			rear.next = temp;
		}
		rear = temp;
		length++;
	}
	
	
	public void dequeue() {
		
		if(isEmpty()) {
			throw new NoSuchElementException();
		}
		front = front.next;
		if(front == null) {
			rear = null;
		}
		length--;
	}
	
	
	public void print() {
		
		if(isEmpty()) {
			return;
		}
		ListNode current = front;
		while(current != null) {
			System.out.print(current.data + " --> ");
			current = current.next;
		}
		System.out.println("null");
	}
	
	
	public int first() {
		
		if(isEmpty()) {
			throw new NoSuchElementException();
		}
		return front.data;
	}
	
	public int last() {
		
		if(isEmpty()) {
			throw new NoSuchElementException();
		}
		return rear.data;
	}
	
	
	public static void main(String[] args) {
		
		Queue queue = new Queue();
		queue.enqueue(10); // 10 --> null
		queue.enqueue(15); // 10 --> 15 --> null
		queue.enqueue(20); // 10 --> 15 --> 20 --> null
		queue.print();
		
		queue.dequeue(); // 15 --> 20 --> null
		queue.print();

		System.out.println("First Node " + queue.first());
		System.out.println("Last Node " + queue.last());
	}

}
